//Traveling around
jTabbedPane1.setSelectedComponent(jPanel2);
System.exit(0);

this.setVisible(false);
JFrame boutme = new boutme();
boutme.setVisible(true);

//close method
   private void cerActionPerformed(java.awt.event.ActionEvent evt) {                                    
        this.setVisible(false);
        JFrame UD2_T2_AnsuFati = new UD2_T2_AnsuFati();
        UD2_T2_AnsuFati.setVisible(true);
    }  
    
// center panel
this.setLocationRelativeTo(null)
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
LOGIN ICON
 private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        this.setVisible(false);        
        JPanel frmIngreso = new frmIngreso();        
        JFrame frame = new JFrame();
        frame.setResizable(false);
        frame.getContentPane().add(frmIngreso);    
        frame.pack();
        frame.setLocationRelativeTo(null);
        frame.setVisible(true);
    }  
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////77
//DateController (JXDatePicker)
public class house extends javax.swing.JFrame {

    Calendar today = Calendar.getInstance();
    Calendar plusone = Calendar.getInstance();    
    Date today2, plusone2;
    /**
     * Creates new form house
     */
    public house() {            
        initComponents();
        this.setResizable(false); 
        
        today.add(Calendar.DAY_OF_MONTH, -1);
        today2 = today.getTime();
        
        plusone.add(Calendar.YEAR, 1);
        plusone2 = plusone.getTime();
    }

 private void entradaActionPerformed(java.awt.event.ActionEvent evt) {                                        
        if ((entrada.getDate().before(today2))){
            JOptionPane.showMessageDialog(this,"E. Set a date higher or equals than 2day.");
            entrada.setDate(null);
        } 
        else if ((entrada.getDate().after(plusone2))){
            JOptionPane.showMessageDialog(this,"E. Set a date lower than a year duration.");
            entrada.setDate(null);
        }  
    }                                       

    private void salActionPerformed(java.awt.event.ActionEvent evt) {                                    
         if (sal.getDate().before(entrada.getDate())){
            JOptionPane.showMessageDialog(this,"E.Set an OutDate higher than the enter one.");
            sal.setDate(null);
        } 
        else if ((sal.getDate().after(plusone2))){
            JOptionPane.showMessageDialog(this,"E.Set a date lower than a year duration.");
            sal.setDate(null);
        } 
        else if ((sal.getDate().before(today2))){
            JOptionPane.showMessageDialog(this,"E. Set a date higher or equals than today.");
            sal.setDate(null);
        }   
    }     
    
    
    public class notentifin {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
          JFrame frame = new JFrame();
      frame.setContentPane(new frmIngreso());
      frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
      frame.pack();
      frame.setVisible(true);
    }
    
}

////////////
 * @author dam2d08
 */
public class frm extends JPanel {
    
    public frmIngreso() {
        initComponents();
        if (!Beans.isDesignTime()) {
            entityManager.getTransaction().begin();
        }
    }
    
    private void btnIngresarActionPerformed(java.awt.event.ActionEvent evt){
        Query queryUserPass = entityManager.createNamedQuery("Usuario.findByUserPass");
        queryUserPass.setParameter("usuario", txtUsuario.getText());
        queryUserPass.setParameter("clave", txtPass.getText());
        
        List<Usuario> users = queryUserPass.getResultList();
        
        if (users.size()==1){
            JOptionPane.showMessageDialog(null, "Bienvenid@: " + users.getClass(0).getUsuario());   
        }
        else {
            JOptionPane.showMessageDialog(null, "Los datos ingresados no so correctos\nRevise e intente nuevamente."); 
        }
    }

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////     
     //JcomboBox (for places)
      private void tipoActionPerformed(java.awt.event.ActionEvent evt) {                                     
         switch (tipo.getSelectedItem().toString()){
            case "Woodlands House" :
                desa.setVisible(false);
                break;
            case "Full equipment" :
                desa.setVisible(false);
                break;
            case "Roomed woodland house" :
                desa.setVisible(true);
                break;
            case "Mnagement center" :
                desa.setVisible(false);
                break;
            case "Chill zone":
                desa.setVisible(true);
                break;
        }
    }      
//JcomboBox (for childs)
 private void childsActionPerformed(java.awt.event.ActionEvent evt) {                                      
        switch (Integer.parseInt(childs.getSelectedItem().toString())){
            case 0:
                jLabel7.setVisible(false);
                agno1.setVisible(false);
                agno2.setVisible(false);
                agno3.setVisible(false);
                agno4.setVisible(false);
                break;
            case 1:
                jLabel7.setVisible(false);
                agno1.setVisible(false);
                agno2.setVisible(false);
                agno3.setVisible(false);
                agno4.setVisible(false);
                jLabel7.setVisible(true);
                jLabel7.setText("Children age:");
                agno1.setVisible(true);
            
                break;
            case 2:
                jLabel7.setVisible(false);
                agno1.setVisible(false);
                agno2.setVisible(false);
                agno3.setVisible(false);
                agno4.setVisible(false);
                jLabel7.setVisible(true);
                agno1.setVisible(true);
                agno2.setVisible(true);
              
                break;
            case 3:
                jLabel7.setVisible(false);
                agno1.setVisible(false);
                agno2.setVisible(false);
                agno3.setVisible(false);
                agno4.setVisible(false);
                jLabel7.setVisible(true);
                agno1.setVisible(true);
                agno2.setVisible(true);
                agno3.setVisible(true);
   
                break;
            case 4:
                jLabel7.setVisible(false);
                agno1.setVisible(false);
                agno2.setVisible(false);
                agno3.setVisible(false);
                agno4.setVisible(false);
                jLabel7.setVisible(true);
                agno1.setVisible(true);
                agno2.setVisible(true);
                agno3.setVisible(true);
                agno4.setVisible(true);
                break;
        }
    }         
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Search btn
private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        String result = "";
        boolean entra = false;
        switch (Integer.parseInt(childs.getSelectedItem().toString())){
            case 1:
                if (agno1.getText().equals("")){
                JOptionPane.showMessageDialog(null, "Rellene los campos necesarios.", "Información", JOptionPane.INFORMATION_MESSAGE);
                entra = true;
                }
                else if (!agno1.getText().matches("[1-9]")) {
                JOptionPane.showMessageDialog(null, "Rellene los campos con numeros.", "Información", JOptionPane.INFORMATION_MESSAGE);    
                entra = true;    
                }
                break;
            case 2:
                if (agno1.getText().equals("") || agno2.getText().equals("")){
                JOptionPane.showMessageDialog(null, "Rellene los campos necesarios.", "Información", JOptionPane.INFORMATION_MESSAGE);
                entra = true;
                }
                else if (!agno1.getText().matches("[1-9]") || !agno2.getText().matches("[1-9]")) {
                JOptionPane.showMessageDialog(null, "Rellene los campos con numeros.", "Información", JOptionPane.INFORMATION_MESSAGE);    
                entra = true;    
                }
                break;
            case 3:
                if (agno1.getText().equals("") || agno2.getText().equals("") || agno3.getText().equals("")){
                JOptionPane.showMessageDialog(null, "Rellene los campos necesarios.", "Información", JOptionPane.INFORMATION_MESSAGE);
                entra = true;
                }
                else if (!agno1.getText().matches("[1-9]") || !agno2.getText().matches("[1-9]") || !agno3.getText().matches("[1-9]")) {
                JOptionPane.showMessageDialog(null, "Rellene los campos con numeros.", "Información", JOptionPane.INFORMATION_MESSAGE);    
                entra = true;    
                }
                break;
            case 4:
                if (agno1.getText().equals("") || agno2.getText().equals("") || agno3.getText().equals("") || agno4.getText().equals("")){
                JOptionPane.showMessageDialog(null, "Rellene los campos necesarios.", "Información", JOptionPane.INFORMATION_MESSAGE);
                entra = true;
                }
                else if (!agno1.getText().matches("[1-9]") || !agno2.getText().matches("[1-9]") || !agno3.getText().matches("[1-9]") || !agno4.getText().matches("[1-9]")) {
                JOptionPane.showMessageDialog(null, "Rellene los campos con numeros.", "Información", JOptionPane.INFORMATION_MESSAGE);    
                entra = true;    
                }
                break;
        }      
        if (entra != true){
            if (destino.getText().equals("") || entrada.getDate().equals("") || sal.getDate().equals("") || tipo.getSelectedItem().toString().equals("")
                || adultos.getSelectedItem().toString().equals("")) {
            JOptionPane.showMessageDialog(null, "Rellene los campos necesarios.", "Información", JOptionPane.INFORMATION_MESSAGE);
            }
            else {
                if (!destino.getText().equals("")){
                result += "Destino: " + destino.getText() + "\n";
                }
                if (!entrada.getDate().equals("")){
                    result += "Fecha de Entrada: " + entrada.getDate() + "\n";
                }
                if (!sal.getDate().equals("")){
                    result += "Fecha de Salida: " + sal.getDate() + "\n";
                }
                if(!tipo.getSelectedItem().toString().equals("")){
                    result += "Tipo de alojamiento: " + tipo.getSelectedItem().toString() + "\n";
                }
                if(!desa.getSelectedItem().toString().equals("")){
                    result += "Tipo de desayuno: " + desa.getSelectedItem().toString() + "\n";
                }
                if(!adultos.getSelectedItem().toString().equals("")){
                    result += "Numero de adultos: " + adultos.getSelectedItem().toString() + "\n";
                }
                if (!agno1.getText().equals("")){
                    result += "ChildAge1: " + agno1.getText() + "\n";
                }
                if (!agno2.getText().equals("")){
                    result += "CA2: " + agno2.getText() + "\n";
                }
                if (!agno3.getText().equals("")){
                    result += "CA3: " + agno3.getText() + "\n";
                }
                if (!agno4.getText().equals("")){
                    result += "CA4: " + agno4.getText() + "\n";
                }
                this.setVisible(false);
                JFrame resumenHouse = new resumenHouse(result);
                resumenHouse.setVisible(true);  
            }  
        }
                            
    }  
    
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////7
form resumen
 private void jButton4ResActionPerformed(java.awt.event.ActionEvent evt) {                                            

        
        Nombre = jTextField1.getText();
        Email = jTextField2Ema.getText();
        Ciudad = jComboBox1Ciu.getSelectedItem().toString();
        Aficiones = "";
  
        jTextField5Nom.setText(Nombre);
        jTextField6Ema.setText(Email);
        jTextField7Ciu.setText(Ciudad);
        
        if(jCheckBox3Cin.isSelected()){
            Aficiones = Aficiones + "Cine ";
        }
        if(jCheckBox2Lec.isSelected()){
            Aficiones = Aficiones+ "Lectura ";
        }
        if (jCheckBox1Dep.isSelected()){
            Aficiones = Aficiones + "Deportes ";
        }
        if (jCheckBox4Mus.isSelected()){
            Aficiones = Aficiones + "Musica";
        }
        if(!jCheckBox1Dep.isSelected()&&!jCheckBox2Lec.isSelected()&&!jCheckBox3Cin.isSelected()
                &&!jCheckBox4Mus.isSelected()){
        Aficiones = "Sin aficiones";
        }
        jTextField8Afi.setText(Aficiones);
        jRadioButton1Mas.setActionCommand("Masculino");
        jRadioButton2Fem.setActionCommand("Femenino");
        
        jTextField9Sex.setText(buttonGroup2.getSelection().getActionCommand());
        jTabbedPane1.setSelectedComponent(jPanel4);
                              
    }  
   //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
   Clean Button
   private void jButton5LimActionPerformed(java.awt.event.ActionEvent evt) {                                            
            
        jTextField1.setText("");
        jTextField2Ema.setText("");
        jComboBox1Ciu.setSelectedItem("Default City");
        jCheckBox1Dep.setSelected(false);
        jCheckBox2Lec.setSelected(false);
        jCheckBox3Cin.setSelected(false);
        jCheckBox4Mus.setSelected(false);
        buttonGroup2.clearSelection();
                                       
    }      
    
    
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    Slider Component
     private void jSlider1StateChanged(javax.swing.event.ChangeEvent evt) {                                      
                         
        String pattern = "###,###.###";
        DecimalFormat decimalFormat = new DecimalFormat(pattern);
        
        String format = decimalFormat.format(jSlider1.getValue());
        jTextField3.setText((double) (jSlider1.getValue()) + " €");
        jTextField4.setText(Integer.toString((int) (jSlider1.getValue()*1.1)) + " $");
        jTextField10.setText(Integer.toString((int) (jSlider1.getValue()*0.86)) + " £");
          
    }      
